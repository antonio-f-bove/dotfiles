
# restart services
hyper - 0x1B : yabai --restart-service
hyper - 0x18 : skhd --restart-service
hyper - b : blueutil --connect f8-66-5a-15-f4-a3 \
        && SwitchAudioSource -s "Beats Fit Pro"


# applications
hyper - x : open /Applications/Alacritty.app
hyper - c : open /Applications/Google\ Chrome.app
hyper - s : open /Applications/Spotify.app
hyper - d : open ~/Library/CloudStorage/OneDrive-SharedLibraries-GualaClosuresGroup/Gualaclosures\ -\ Information\ Tecnology\ -\ Documenti/SmartWorking/SmartWorkingPlanning.xlsx
hyper - z : open /Applications/Obsidian.app
# hyper - n : open /Applications/Alacritty.app && tmux

meh - a : open /System/Applications/Utilities/Activity\ Monitor.app
meh - q : open /System/Applications/Utilities/Disk\ Utility.app
meh - s : open /System/Applications/System\ Settings.app
meh - z : open ~/Documents
meh - x : open /System/Applications
 # --env -disable-features=HardwareMediaKeyHandling && \
meh - d : open /Applications/Microsoft\ Teams\ \(work\ or\ school\).app && \
          open /Applications/Microsoft\ Outlook.app

# Cycle focus windows
hyper - j : yabai -m window --focus next || yabai -m window --focus first
hyper - k : yabai -m window --focus prev || yabai -m window --focus last

# options: zoom-parent, zoom-fullscreen, native-fullscreen
hyper - space : yabai -m window --toggle zoom-fullscreen
meh - space : yabai -m window --toggle zoom-parent

# Cycle local Spaces
# yabai -m query --spaces --display | jq '.[].index' -> spaces on focused display
# index="$(yabai -m query --spaces --display | jq 'map(select(."is-native-fullscreen" == false))[-1].index')" && \
# hyper - h : yabai -m space --focus prev 
# hyper - l : yabai -m space --focus next 
# hyper - h : id="$(yabai -m query --spaces --display | jq 'sort_by(.index) | .[map(."has-focus") | index(true) - 1].index')" && yabai -m space --focus "${id}"
# hyper - l : id="$(yabai -m query --spaces --display | jq 'sort_by(.index) | reverse | .[map(."has-focus") | index(true) - 1].index')" && yabai -m space --focus "${id}"
hyper - h : sh /Users/anto/dotfiles/skhd/scripts/focus-prev
hyper - l : sh /Users/anto/dotfiles/skhd/scripts/focus-next

# TODO: move scripts to one general directory
# cycle monitor focus
hyper - 0x29 : yabai -m display --focus next || yabai -m display --focus first
hyper - 0x27 : yabai -m display --focus prev || yabai -m display --focus last
# TODO: meh - 0x29 : send focused space to next display

# Focus Space
hyper - m : yabai -m space --focus recent
hyper - y : yabai -m space --focus 2
hyper - u : yabai -m space --focus 3
hyper - i : yabai -m space --focus 4
hyper - o : yabai -m space --focus 5
hyper - p : yabai -m space --focus 6
hyper - 0x21 : yabai -m space --focus 7
hyper - 0x1E : yabai -m space --focus 8

# Send window to space
meh - y : yabai -m window --space 2; yabai -m space --focus 2
meh - u : yabai -m window --space 3; yabai -m space --focus 3
meh - i : yabai -m window --space 4; yabai -m space --focus 4
meh - o : yabai -m window --space 5; yabai -m space --focus 5
meh - p : yabai -m window --space 6; yabai -m space --focus 6
meh - 0x21 : yabai -m window --space 7; yabai -m space --focus 7
meh - 0x1E : yabai -m window --space 8; yabai -m space --focus 8

# toggle padding and gaps
hyper - g : yabai -m space --toggle padding; yabai -m space --toggle gap

# INFO: disabled because annoying and not frequently used
# create desktop, move window and follow focus - uses jq for parsing json (brew install jq)
# hyper - n : yabai -m space --create && \
#                   index="$(yabai -m query --spaces --display | jq 'map(select(."is-native-fullscreen" == false))[-1].index')" && \
#                   yabai -m window --space "${index}" && \
#                   yabai -m space --focus "${index}"

# TODO: Assign to arrow keys
# swap horizontal (',' & '.')
meh - 0x2B : yabai -m window --swap west
meh - 0x2F : yabai -m window --swap east

# Rotate windows
meh - n : yabai -m space --rotate 270

# Balance size of windows
meh - b : yabai -m space --balance

# resize windows
meh - k : \
    yabai -m window --resize top:0:-20 ; \
    yabai -m window --resize bottom:0:-20
meh - h : \
    yabai -m window --resize left:-20:0 ; \
    yabai -m window --resize right:-20:0
meh - j : \
    yabai -m window --resize bottom:0:20 ; \
    yabai -m window --resize top:0:20
meh - l : \
    yabai -m window --resize right:20:0 ; \
    yabai -m window --resize left:20:0

# make floating window fill screen
# hyper - m : yabai -m window --toggle float && yabai -m window --grid 1:1:0:0:1:1

# float / unfloat window and center on screen
hyper - t : yabai -m window --toggle float --grid 4:4:1:1:2:2

# toggle layout bsp/float for current space
hyper - r : yabai -m space --layout $(yabai -m query --spaces --space | jq -r 'if .type == "bsp" then "float" else "bsp" end')

# toggle sticky(+float), topmost, picture-in-picture
# alt - p : yabai -m window --toggle sticky --toggle topmost --toggle pip

# cycle forwards on the focused display
# hyper + tab : id="$(yabai -m query --spaces --display \ 
#     | jq 'sort_by(.index) \
#     | reverse \
#     | .[map(."has-focus") \
#     | index(true) - 1].index')" && yabai -m space --focus "${id}"
# cycle backwards on the focused display
# id="$(yabai -m query --spaces --display | jq 'sort_by(.index) | .[map(."has-focus") | index(true) - 1].index')" && yabai -m space --focus "${id}"

